<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxsc="clr-namespace:DevExpress.Xpf.SpellChecker;assembly=DevExpress.Xpf.SpellChecker.v17.2" xmlns:misc="clr-namespace:BaseModel.Misc" xmlns:services="clr-namespace:BaseModel.ViewModel.Services">
    <Style x:Key="CollectionView.BaseRootContainer" TargetType="FrameworkElement">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dx:DXMessageBoxService />
                        <dxmvvm:NotificationService x:Name="AppNotificationService" CustomNotificationPosition="BottomRight" UseWin8NotificationsIfAvailable="False" />
                        <dxmvvm:EventToCommand Command="{Binding OnLoadedCommand}" Event="Loaded" />
                        <dx:WindowedDocumentUIService YieldToParent="True" />
                        <dx:DialogService x:Name="BulkColumnEditService">
                            <dx:DialogService.DialogStyle>
                                <Style TargetType="dx:DXDialogWindow">
                                    <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                    <Setter Property="MinWidth" Value="500" />
                                    <Setter Property="MinHeight" Value="370" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                        </dx:DialogService>
                        <dxmvvm:LayoutSerializationService />
                        <dxmvvm:FolderBrowserDialogService Description="Choose Folder" RestorePreviouslySelectedDirectory="True" RootFolder="Desktop" ShowNewFolderButton="True" />
                        <!--  When multiple grid service is called, x:Name directive cannot be used so services can't be in dictionary  -->
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dx:DXSerializer.StoreLayoutMode" Value="UI" />
    </Style>
    <Style x:Key="CollectionView.RootContainer" TargetType="FrameworkElement">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dx:DXMessageBoxService />
                        <dxmvvm:NotificationService x:Name="AppNotificationService" CustomNotificationPosition="BottomRight" UseWin8NotificationsIfAvailable="False" />
                        <dxmvvm:EventToCommand Command="{Binding OnLoadedCommand}" Event="Loaded" />
                        <dx:WindowedDocumentUIService YieldToParent="True" />
                        <dx:DialogService x:Name="BulkColumnEditService">
                            <dx:DialogService.DialogStyle>
                                <Style TargetType="dx:DXDialogWindow">
                                    <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                    <Setter Property="MinWidth" Value="500" />
                                    <Setter Property="MinHeight" Value="370" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                        </dx:DialogService>
                        <dx:DialogService x:Name="FilterDialogService">
                            <dx:DialogService.DialogStyle>
                                <Style TargetType="dx:DXDialogWindow">
                                    <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                        </dx:DialogService>
                        <dxmvvm:LayoutSerializationService />
                        <dxmvvm:FolderBrowserDialogService Description="Choose Folder" RestorePreviouslySelectedDirectory="True" RootFolder="Desktop" ShowNewFolderButton="True" />
                        <services:TableViewService x:Name="DefaultTableViewService" TableView="{Binding ElementName=tableView}" />
                        <services:GridControlService x:Name="DefaultGridControlService" GridControl="{Binding ElementName=GridControl}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dx:DXSerializer.StoreLayoutMode" Value="UI" />
    </Style>
    <Style x:Key="CollectionView.TreeListRootContainer" TargetType="FrameworkElement">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dx:DXMessageBoxService />
                        <dxmvvm:NotificationService x:Name="AppNotificationService" CustomNotificationPosition="BottomRight" UseWin8NotificationsIfAvailable="False" />
                        <dxmvvm:EventToCommand Command="{Binding OnLoadedCommand}" Event="Loaded" />
                        <dx:WindowedDocumentUIService YieldToParent="True" />
                        <dx:DialogService x:Name="BulkColumnEditService">
                            <dx:DialogService.DialogStyle>
                                <Style TargetType="dx:DXDialogWindow">
                                    <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                    <Setter Property="MinWidth" Value="500" />
                                    <Setter Property="MinHeight" Value="370" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                        </dx:DialogService>
                        <dxmvvm:LayoutSerializationService />
                        <dxmvvm:FolderBrowserDialogService Description="Choose Folder" RestorePreviouslySelectedDirectory="True" RootFolder="Desktop" ShowNewFolderButton="True" />
                        <services:GridControlService x:Name="TreeGridControlService" GridControl="{Binding ElementName=GridControlTree}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dx:DXSerializer.StoreLayoutMode" Value="UI" />
    </Style>
    <Style x:Key="DefaultLightGridControlTemplate" TargetType="{x:Type dxg:GridControl}">
        <Setter Property="ShowLoadingPanel" Value="{Binding DataContext.IsLoading, ElementName=userControl}" />
        <Setter Property="ItemsSource" Value="{Binding DataContext.DisplayEntities, ElementName=userControl}" />
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader" />
        <Setter Property="SelectionMode" Value="Row" />
        <Setter Property="CurrentItem" Value="{Binding DataContext.DisplaySelectedEntity, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="SelectedItems" Value="{Binding DataContext.DisplaySelectedEntities, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="AutoExpandAllGroups" Value="False" />
        <Setter Property="ShowAllTableValuesInCheckedFilterPopup" Value="False" />
    </Style>
    <Style x:Key="SingleProjectGridControlTemplate" TargetType="{x:Type dxg:GridControl}">
        <Setter Property="ShowLoadingPanel" Value="{Binding DataContext.IsLoading, ElementName=userControl}" />
        <Setter Property="ItemsSource" Value="{Binding DataContext.DisplayEntities, ElementName=userControl}" />
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader" />
        <Setter Property="SelectionMode" Value="{Binding SelectMode}" />
        <Setter Property="SelectedItems" Value="{Binding DataContext.DisplaySelectedEntities, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="AutoExpandAllGroups" Value="False" />
        <Setter Property="ShowAllTableValuesInCheckedFilterPopup" Value="False" />
        <Setter Property="dxsc:SpellingSettings.CheckAsYouType" Value="True" />
        <Setter Property="dxsc:SpellingSettings.ShowSpellCheckMenu" Value="True" />
        <Setter Property="dxsc:SpellingSettings.SpellChecker" Value="{Binding DataContext.SpellCheckerModule.SpellChecker, ElementName=userControl}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:KeyToCommand Command="{Binding ShowPopUpCommand}" CommandParameter="{Binding ElementName=GridControl}" KeyGesture="Space" />
                        <dxmvvm:KeyToCommand Command="{Binding DeleteCellContentCommand}" CommandParameter="{Binding ElementName=GridControl}" KeyGesture="Delete" />
                        <dxmvvm:EventToCommand Command="{Binding Grid_MouseWheelCommand}" EventName="PreviewMouseWheel" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.CustomColumnGroupCommand, ElementName=userControl}" EventName="CustomColumnGroup" PassEventArgsToCommand="True" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform" Value="{Binding Zoom, Mode=OneWay}" />
    </Style>
    <Style x:Key="DefaultGridControlTemplate" TargetType="{x:Type dxg:GridControl}">
        <Setter Property="ShowLoadingPanel" Value="{Binding DataContext.IsLoading, ElementName=userControl}" />
        <Setter Property="ItemsSource" Value="{Binding DataContext.DisplayEntities, ElementName=userControl}" />
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader" />
        <Setter Property="SelectionMode" Value="{Binding SelectMode}" />
        <Setter Property="CurrentItem" Value="{Binding DataContext.DisplaySelectedEntity, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="SelectedItems" Value="{Binding DataContext.DisplaySelectedEntities, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="AutoExpandAllGroups" Value="False" />
        <Setter Property="ShowAllTableValuesInCheckedFilterPopup" Value="False" />
        <Setter Property="dxsc:SpellingSettings.CheckAsYouType" Value="True" />
        <Setter Property="dxsc:SpellingSettings.ShowSpellCheckMenu" Value="True" />
        <Setter Property="dxsc:SpellingSettings.SpellChecker" Value="{Binding DataContext.SpellCheckerModule.SpellChecker, ElementName=userControl}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:KeyToCommand Command="{Binding ShowPopUpCommand}" CommandParameter="{Binding ElementName=GridControl}" KeyGesture="Space" />
                        <dxmvvm:KeyToCommand Command="{Binding DeleteCellContentCommand}" CommandParameter="{Binding ElementName=GridControl}" KeyGesture="Delete" />
                        <dxmvvm:EventToCommand Command="{Binding Grid_MouseWheelCommand}" EventName="PreviewMouseWheel" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.CustomColumnGroupCommand, ElementName=userControl}" EventName="CustomColumnGroup" PassEventArgsToCommand="True" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform" Value="{Binding Zoom, Mode=OneWay}" />
    </Style>
    <Style x:Key="DualGridControlTemplate" TargetType="{x:Type dxg:GridControl}">
        <Setter Property="ShowLoadingPanel" Value="{Binding IsLoading}" />
        <Setter Property="ItemsSource" Value="{Binding DisplayEntities}" />
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader" />
        <Setter Property="SelectionMode" Value="{Binding MainViewModel.SelectMode}" />
        <Setter Property="CurrentItem" Value="{Binding DisplaySelectedEntity, Mode=TwoWay}" />
        <Setter Property="SelectedItems" Value="{Binding DisplaySelectedEntities, Mode=TwoWay}" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="AutoExpandAllGroups" Value="False" />
        <Setter Property="ShowAllTableValuesInCheckedFilterPopup" Value="False" />
        <Setter Property="dxsc:SpellingSettings.CheckAsYouType" Value="True" />
        <Setter Property="dxsc:SpellingSettings.ShowSpellCheckMenu" Value="True" />
        <Setter Property="dxsc:SpellingSettings.SpellChecker" Value="{Binding DataContext.SpellCheckerModule.SpellChecker, ElementName=userControl}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:KeyToCommand Command="{Binding MainViewModel.ShowPopUpCommand}" CommandParameter="{Binding ElementName=GridControl}" KeyGesture="Space" />
                        <dxmvvm:KeyToCommand Command="{Binding MainViewModel.DeleteCellContentCommand}" CommandParameter="{Binding ElementName=GridControl}" KeyGesture="Delete" />
                        <dxmvvm:EventToCommand Command="{Binding MainViewModel.Grid_MouseWheelCommand}" EventName="PreviewMouseWheel" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.CustomColumnGroupCommand, ElementName=userControl}" EventName="CustomColumnGroup" PassEventArgsToCommand="True" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutTransform" Value="{Binding MainViewModel.Zoom, Mode=OneWay}" />
    </Style>
    <Style x:Key="DefaultDetailGridControlTemplate" TargetType="{x:Type dxg:GridControl}">
        <Setter Property="ShowLoadingPanel" Value="{Binding DataContext.IsLoading, ElementName=userControl}" />
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader" />
        <Setter Property="SelectionMode" Value="Row" />
        <Setter Property="CurrentItem" Value="{Binding DataContext.DisplaySelectedEntity, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="SelectedItems" Value="{Binding DataContext.DisplaySelectedEntities, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="AutoExpandAllGroups" Value="False" />
        <Setter Property="ShowAllTableValuesInCheckedFilterPopup" Value="False" />
        <Setter Property="dxsc:SpellingSettings.CheckAsYouType" Value="True" />
        <Setter Property="dxsc:SpellingSettings.ShowSpellCheckMenu" Value="True" />
        <Setter Property="dxsc:SpellingSettings.SpellChecker" Value="{Binding DataContext.SpellCheckerModule.SpellChecker, ElementName=userControl}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:KeyToCommand Command="{Binding ShowPopUpCommand}" CommandParameter="{Binding ElementName=GridControl}" KeyGesture="Space" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultOtherMainDetailGridControlTemplate" TargetType="{x:Type dxg:GridControl}">
        <Setter Property="ShowLoadingPanel" Value="{Binding DataContext.IsLoading, ElementName=userControl}" />
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader" />
        <Setter Property="SelectionMode" Value="Row" />
        <Setter Property="CurrentItem" Value="{Binding DataContext.MainEntitiesViewModel.SelectedEntity, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="SelectedItems" Value="{Binding DataContext.MainEntitiesViewModel.SelectedEntities, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="AutoExpandAllGroups" Value="False" />
        <Setter Property="ShowAllTableValuesInCheckedFilterPopup" Value="False" />
        <Setter Property="dxsc:SpellingSettings.CheckAsYouType" Value="True" />
        <Setter Property="dxsc:SpellingSettings.ShowSpellCheckMenu" Value="True" />
        <Setter Property="dxsc:SpellingSettings.SpellChecker" Value="{Binding DataContext.SpellCheckerModule.SpellChecker, ElementName=userControl}" />
    </Style>
    <Style x:Key="DefaultOtherChildDetailGridControlTemplate" TargetType="{x:Type dxg:GridControl}">
        <Setter Property="ShowLoadingPanel" Value="{Binding DataContext.IsLoading, ElementName=userControl}" />
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader" />
        <Setter Property="SelectionMode" Value="Row" />
        <Setter Property="CurrentItem" Value="{Binding DataContext.ChildEntitiesViewModel.SelectedEntity, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="SelectedItems" Value="{Binding DataContext.ChildEntitiesViewModel.SelectedEntities, Mode=TwoWay, ElementName=userControl}" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="AutoExpandAllGroups" Value="False" />
        <Setter Property="ShowAllTableValuesInCheckedFilterPopup" Value="False" />
        <Setter Property="dxsc:SpellingSettings.CheckAsYouType" Value="True" />
        <Setter Property="dxsc:SpellingSettings.ShowSpellCheckMenu" Value="True" />
        <Setter Property="dxsc:SpellingSettings.SpellChecker" Value="{Binding DataContext.SpellCheckerModule.SpellChecker, ElementName=userControl}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:KeyToCommand Command="{Binding ShowPopUpCommand}" CommandParameter="{Binding ElementName=GridControl}" KeyGesture="Space" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultTableViewTemplate" TargetType="{x:Type dxg:TableView}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding ExistingRowAddUndoAndSaveCommand}" EventName="CellValueChanged" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding NewRowAddUndoAndSaveCommand}" EventName="RowUpdated" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding ValidateCellCommand}" EventName="ValidateCell" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding ValidateRowCommand}" EventName="ValidateRow" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding PastingFromClipboardCommand}" EventName="PastingFromClipboard" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding ShownEditorCommand}" EventName="ShownEditor" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.CellValueChangingCommand, ElementName=userControl}" EventName="CellValueChanging" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.PreviewKeyDownCommand, ElementName=userControl}" EventName="PreviewKeyDown" PassEventArgsToCommand="True" />
                        <dxmvvm:KeyToCommand Command="{Binding UndoCommand}" KeyGesture="CTRL+Z" />
                        <dxmvvm:KeyToCommand Command="{Binding RedoCommand}" KeyGesture="CTRL+Y" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ShowTotalSummary" Value="True" />
        <Setter Property="GroupSummaryDisplayMode" Value="AlignByColumns" />
        <Setter Property="NewItemRowPosition" Value="Top" />
        <Setter Property="AllowPerPixelScrolling" Value="True" />
        <Setter Property="ShowGroupedColumns" Value="True" />
        <Setter Property="ShowSearchPanelMode" Value="Default" />
        <Setter Property="SearchDelay" Value="0" />
        <Setter Property="AllowScrollAnimation" Value="True" />
        <Setter Property="ShowAutoFilterRow" Value="True" />
        <Setter Property="ShowCriteriaInAutoFilterRow" Value="True" />
        <Setter Property="ShowFixedTotalSummary" Value="False" />
        <Setter Property="UseLightweightTemplates" Value="All" />
        <Setter Property="EditorShowMode" Value="MouseDownFocused" />
    </Style>
    <Style x:Key="DefaultDetailTableViewTemplate" TargetType="{x:Type dxg:TableView}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding ExistingRowAddUndoAndSaveCommand}" EventName="CellValueChanged" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding NewRowAddUndoAndSaveCommand}" EventName="RowUpdated" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding ValidateCellCommand}" EventName="ValidateCell" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding ValidateRowCommand}" EventName="ValidateRow" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding PastingFromClipboardCommand}" EventName="PastingFromClipboard" PassEventArgsToCommand="True" />
                        <!--<dxmvvm:KeyToCommand KeyGesture="Delete" Command="{Binding BulkDeleteCommand}"  />-->
                        <dxmvvm:KeyToCommand Command="{Binding UndoCommand}" KeyGesture="CTRL+Z" />
                        <dxmvvm:KeyToCommand Command="{Binding RedoCommand}" KeyGesture="CTRL+Y" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ShowFixedTotalSummary" Value="False" />
        <Setter Property="NewItemRowPosition" Value="Top" />
        <Setter Property="AllowPerPixelScrolling" Value="True" />
        <Setter Property="ShowGroupedColumns" Value="False" />
        <Setter Property="ShowSearchPanelMode" Value="Never" />
        <Setter Property="SearchDelay" Value="0" />
        <Setter Property="AllowScrollAnimation" Value="True" />
    </Style>
    <Style x:Key="DefaultOtherDetailMainTableViewTemplate" TargetType="{x:Type dxg:TableView}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding DataContext.MainEntitiesViewModel.ExistingRowAddUndoAndSaveCommand, ElementName=userControl}" EventName="CellValueChanged" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.MainEntitiesViewModel.NewRowAddUndoAndSaveCommand, ElementName=userControl}" EventName="RowUpdated" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.MainEntitiesViewModel.ValidateCellCommand, ElementName=userControl}" EventName="ValidateCell" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.MainEntitiesViewModel.ValidateRowCommand, ElementName=userControl}" EventName="ValidateRow" PassEventArgsToCommand="True" />
                        <!--<dxmvvm:KeyToCommand KeyGesture="Delete" Command="{Binding BulkDeleteCommand}"  />-->
                        <dxmvvm:KeyToCommand Command="{Binding DataContext.MainEntitiesViewModel.UndoCommand, ElementName=userControl}" KeyGesture="CTRL+Z" />
                        <dxmvvm:KeyToCommand Command="{Binding DataContext.MainEntitiesViewModel.RedoCommand, ElementName=userControl}" KeyGesture="CTRL+Y" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ShowFixedTotalSummary" Value="False" />
        <Setter Property="NewItemRowPosition" Value="Top" />
        <Setter Property="AllowPerPixelScrolling" Value="True" />
        <Setter Property="ShowGroupedColumns" Value="False" />
        <Setter Property="ShowSearchPanelMode" Value="Never" />
        <Setter Property="SearchDelay" Value="0" />
        <Setter Property="AllowScrollAnimation" Value="True" />
    </Style>
    <Style x:Key="DefaultOtherDetailChildTableViewTemplate" TargetType="{x:Type dxg:TableView}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding DataContext.ChildEntitiesViewModel.ExistingRowAddUndoAndSaveCommand, ElementName=userControl}" EventName="CellValueChanged" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.ChildEntitiesViewModel.NewRowAddUndoAndSaveCommand, ElementName=userControl}" EventName="RowUpdated" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.ChildEntitiesViewModel.ValidateCellCommand, ElementName=userControl}" EventName="ValidateCell" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding DataContext.ChildEntitiesViewModel.ValidateRowCommand, ElementName=userControl}" EventName="ValidateRow" PassEventArgsToCommand="True" />
                        <!--<dxmvvm:KeyToCommand KeyGesture="Delete" Command="{Binding BulkDeleteCommand}"  />-->
                        <dxmvvm:KeyToCommand Command="{Binding DataContext.ChildEntitiesViewModel.UndoCommand, ElementName=userControl}" KeyGesture="CTRL+Z" />
                        <dxmvvm:KeyToCommand Command="{Binding DataContext.ChildEntitiesViewModel.RedoCommand, ElementName=userControl}" KeyGesture="CTRL+Y" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ShowFixedTotalSummary" Value="False" />
        <Setter Property="NewItemRowPosition" Value="Top" />
        <Setter Property="AllowPerPixelScrolling" Value="True" />
        <Setter Property="ShowGroupedColumns" Value="False" />
        <Setter Property="ShowSearchPanelMode" Value="Never" />
        <Setter Property="SearchDelay" Value="0" />
        <Setter Property="AllowScrollAnimation" Value="True" />
    </Style>
    <Style x:Key="DefaultTreeListViewTemplate" TargetType="{x:Type dxg:TreeListView}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding TreelistExistingRowAddUndoAndSaveCommand}" EventName="CellValueChanged" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding PastingFromClipboardTreeListCommand}" EventName="PastingFromClipboard" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding ValidateCellCommand}" EventName="ValidateCell" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding ValidateRowCommand}" EventName="ValidateRow" PassEventArgsToCommand="True" />
                        <dxmvvm:KeyToCommand Command="{Binding UndoCommand}" KeyGesture="CTRL+Z" />
                        <dxmvvm:KeyToCommand Command="{Binding RedoCommand}" KeyGesture="CTRL+Y" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ParentFieldName" Value="ParentEntityKey" />
        <Setter Property="KeyFieldName" Value="EntityKey" />
        <Setter Property="ExpandStateFieldName" Value="IsExpanded" />
        <Setter Property="ShowTotalSummary" Value="True" />
        <Setter Property="AllowPerPixelScrolling" Value="True" />
        <Setter Property="ShowSearchPanelMode" Value="Default" />
        <Setter Property="SearchDelay" Value="0" />
        <Setter Property="AllowScrollAnimation" Value="True" />
        <Setter Property="ShowAutoFilterRow" Value="True" />
        <Setter Property="ShowCriteriaInAutoFilterRow" Value="True" />
        <Setter Property="ShowFixedTotalSummary" Value="False" />
        <Setter Property="AllowSorting" Value="True" />
    </Style>
    <Style x:Key="DualTreeListViewTemplate" TargetType="{x:Type dxg:TreeListView}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding MainViewModel.TreelistExistingRowAddUndoAndSaveCommand}" EventName="CellValueChanged" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding MainViewModel.PastingFromClipboardTreeListCommand}" EventName="PastingFromClipboard" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding MainViewModel.ValidateCellCommand}" EventName="ValidateCell" PassEventArgsToCommand="True" />
                        <dxmvvm:EventToCommand Command="{Binding MainViewModel.ValidateRowCommand}" EventName="ValidateRow" PassEventArgsToCommand="True" />
                        <dxmvvm:KeyToCommand Command="{Binding MainViewModel.UndoCommand}" KeyGesture="CTRL+Z" />
                        <dxmvvm:KeyToCommand Command="{Binding MainViewModel.RedoCommand}" KeyGesture="CTRL+Y" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ParentFieldName" Value="ParentEntityKey" />
        <Setter Property="KeyFieldName" Value="EntityKey" />
        <Setter Property="ExpandStateFieldName" Value="IsExpanded" />
        <Setter Property="ShowTotalSummary" Value="True" />
        <Setter Property="AllowPerPixelScrolling" Value="True" />
        <Setter Property="ShowSearchPanelMode" Value="Default" />
        <Setter Property="SearchDelay" Value="0" />
        <Setter Property="AllowScrollAnimation" Value="True" />
        <Setter Property="ShowAutoFilterRow" Value="True" />
        <Setter Property="ShowCriteriaInAutoFilterRow" Value="True" />
        <Setter Property="ShowFixedTotalSummary" Value="False" />
        <Setter Property="AllowSorting" Value="True" />
    </Style>
</ResourceDictionary>